/*
 * scheduler.c
 *
 *  Created on: Feb 20, 2017
 *      Author: Angelo
 */


#include "stdint.h"
#include "dxcm_ptr_q.h"
#include "scheduler.h"
#include <stdio.h>

const uint32_t NUM_OF_PRIORITIES = 5;

uint8_t _mem[NUM_OF_PRIORITIES][Q_REQUIRED_MEM_SIZE(10)] __attribute__ ((aligned(4)));
q_t q[NUM_OF_PRIORITIES];
void (*func_cb)();

void initDxcmScheduler()
{
    for(uint8_t index = 0; index< NUM_OF_PRIORITIES; index++)
    {
        q[index] = q_init(_mem[index], sizeof(_mem[index]));
    }
}

int32_t scheduleDxcmTask(void* ptr, uint8_t priority)
{
    if(priority >= NUM_OF_PRIORITIES) return -1;

    return q_enqueue(q[priority],ptr);
}

void executeDxcmScheduler()
{
    do
    {
        for(uint32_t prior = 0; prior < NUM_OF_PRIORITIES; prior++)
        {
            func_cb = NULL;
            q_dequeue(q[prior], func_cb);
            if(func_cb)
            {
            	puts("Task Address: %lu \n",func_cb);
                func_cb();
                break;
            }
        }

    }while(func_cb);
}
